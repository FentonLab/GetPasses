#include	<math.h>
#include	<sys/time.h>
#include	<stdio.h>
#include	"tsf.h"
#include	"my_math.h"

#define	INFO_ITERATIONS	100

float	get_info_cnt(rate,t,R,T,Ysz,Xsz)
FLOAT_MAP	rate;
INT_MAP	t;
float	R, T;
int	Ysz,Xsz;
{
	int	i,j;
	float	p,r;
	float ic = 0;

	for(i=0;i<Ysz;i++)
		for(j=0;j<Xsz;j++){
			if(t[i][j] <= 0)
				continue;
			p = (float)t[i][j] / T;
			r = rate[i][j] / R;
			if(r > 0)
				ic += r * (float)log2((double)r) * p;
		}
	return(ic);
}		

float	z_info_cnt(IC, t, n_spks, R, T, Ysz, Xsz, samps_per_sec)
INT_MAP	t;
float	IC, R, T, samps_per_sec;
int	n_spks, Ysz, Xsz;
{
	double	drand48(), sqrt();
	void	srand48();
	int	gettimeofday();
	struct timeval *tp;
	struct timezone *tzp;

	FLOAT_MAP	r;
	float	z, XX, sum, mean, sd, ic;
	INT_MAP	s;
	int	x, y, i, j, n = INFO_ITERATIONS; 

	srand48((long)gettimeofday(tp, tzp));

	for(i = 0; i < n; i++){
		for(y = 0; y < Ysz; y++){
			for(x = 0; x < Xsz; x++){
				if(t[y][x] < 0)
					s[y][x] = t[y][x];
				else
					s[y][x] = 0;
			}
		}
		sum = XX = 0.0;
		j = 0;

		while(j < n_spks){
			y = (int)(Ysz * drand48());	
			x = (int)(Xsz * drand48());	
			if(t[y][x] <= 0)
				continue;
			s[y][x]++;
			j++;
		}

		for(y = 0; y < Ysz; y++){
			for(x = 0; x < Xsz; x++){
				if(t[y][x] < 0){
					r[y][x] = (float)t[y][x];
					continue;
				}
				if(t[y][x] == 0){
					r[y][x] = 0.0;
					continue;
				}
				r[y][x] = (float)s[y][x] / (float)t[y][x] * samps_per_sec;
			}
		}
		ic = get_info_cnt(r, t, R, T, Ysz, Xsz);
		sum += ic;
		XX += (ic * ic);
	}
	mean = sum / (float)n;
	sd = (((float)n * XX) - (sum * sum)) / (n * (n - 1));
	sd = (float)sqrt((double)sd);
	
	z = (IC - mean) / sd;
		
	return (z);
}
